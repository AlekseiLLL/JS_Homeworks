Х	 акое будет выведено значение: let x = 5; alert( x++ ); ?

ќтвет: 5
ѕотому что сначала выведет значение переменной, а потом она будет
инкрементирована.

Х	„ему равно такое выражение: [ ] + false - null + true ?
ќтвет: NaN
ќшибка в математических операндах.

Х	„то выведет этот код: let y = 1; let x = y = 2; alert(x); ?
ќтвет: 2
ќператоры присваивани€ право-асоциативны.

Х	„ему равна сумма [ ] + 1 + 2?
ќтвет: —троке У12Ф
[ ] Ц пуста€ строка, и поэтому сравнива€ еЄ с остальными операндами, они будут
становитьс€ строкой.

Х	„то выведет этот код: alert( "1"[0] )?
ќтвет: ƒиалоговое окно alert со значением 1
ѕотому что обращаемс€ к первому элементу строки, то есть к У1Ф.

Х	„ему равно 2 && 1 && null && 0 && undefined ?
ќтвет: null
ќтсутствие объекта.

Х	≈сть ли разница между выражени€ми? !!( a && b ) и (a && b)?
ќтвет: –азница в типах данных
!!( a && b ) всегда возвращает значение логического типа.

Х	„то выведет этот код: alert( null || 2 && 3 || 4 ); ?
ќтвет: 3
—начала, по таблице приоритетов операторов, сравниваем 2 && 3, вернетс€ 3, 
потому что при сравнении 2 && 3 операторы истинные и возвращаетс€ последний
оператор. ѕотом null || 3, null будет приравниватьс€ к логическому типу и тогда
false || 3, вернетс€ 3. 3 || 4, 3 это true и поэтому сразу возвращаетьс€ 3.

Х	a = [1, 2, 3]; b = [1, 2, 3]; ѕравда ли что a == b ?
ќтвет: Ќеправда
—равниваем два разных объекта, т.к. массивы Ц это объекты.

Х	„то выведет этот код: alert( +"Infinity" ); ?
ќтвет: ƒиалоговое окно alert со значением Infinity числового типа
”нарный плюс переводит строку в number, а Infinity Ц это тип number.

Х	¬ерно ли сравнение: "Єжик" > "€блоко"?
ќтвет: ¬ерно
ѕотому что сравниваютс€ коды первых символов строк по ёникодовской таблице.
¬ ней УЄФ = 1105, а У€Ф = 1103.

Х	„ему равно 0 || "" || 2 || undefined || true || falsе ?
ќтвет: 2
ѕотому что при 0 || "" возвращeтьс€ false. ѕри 2 || true возвращаетьс€ 2.
